<launch>
    <arg name="model" default="burger" doc="model type [burger, waffle]"/>
    <arg name="robot_name"/>
    <arg name="x"/>
    <arg name="y"/>
    <arg name="z"/>

    <group ns="$(arg robot_name)">
	    <param name="tf_prefix" value="$(arg robot_name)" />
         <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

	    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x) -y $(arg y) -z $(arg z) -urdf -model $(arg robot_name)_$(arg model) -param robot_description" />

	    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		 <param name="publish_frequency" type="double" value="50.0" />
	    </node>

	  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
	    <param name="base_frame" value="$(arg robot_name)/base_footprint"/>
	    <param name="odom_frame" value="$(arg robot_name)/odom"/>
	    <param name="map_frame" value="$(arg robot_name)/map"/>
	    <param name="map_update_interval" value="1"/>
	    <param name="maxUrange" value="3.9"/>
	    <param name="minimumScore" value="100"/>
	    <param name="linearUpdate" value="0.2"/>
	    <param name="angularUpdate" value="0.2"/>
	    <param name="temporalUpdate" value="0.5"/>
	    <param name="delta" value="0.05"/>
	    <param name="lskip" value="0"/>
	    <param name="particles" value="50"/>
	    <param name="sigma" value="0.05"/>
	    <param name="kernelSize" value="1"/>
	    <param name="lstep" value="0.05"/>
	    <param name="astep" value="0.05"/>
	    <param name="iterations" value="5"/>
	    <param name="lsigma" value="0.075"/>
	    <param name="ogain" value="3.0"/>
	    <param name="srr" value="0.01"/>
	    <param name="srt" value="0.02"/>
	    <param name="str" value="0.01"/>
	    <param name="stt" value="0.02"/>
	    <param name="resampleThreshold" value="0.5"/>
	    <param name="xmin" value="-30.0"/>
	    <param name="ymin" value="-30.0"/>
	    <param name="xmax" value="30.0"/>
	    <param name="ymax" value="30.0"/>
	    <param name="llsamplerange" value="0.01"/>
	    <param name="llsamplestep" value="0.01"/>
	    <param name="lasamplerange" value="0.005"/>
	    <param name="lasamplestep" value="0.005"/>
         <remap from="map" to="map_local"/>
	  </node>

        <node pkg="move_base" type="move_base" respawn="false" name="move_base">
		    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
		    <rosparam file="$(find mrslam_sim)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
		    <rosparam file="$(find mrslam_sim)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
		    <rosparam file="$(find mrslam_sim)/param/local_costmap_params.yaml" command="load" />
		    <rosparam file="$(find mrslam_sim)/param/global_costmap_params.yaml" command="load" />
		    <rosparam file="$(find mrslam_sim)/param/move_base_params.yaml" command="load" />
		    <rosparam file="$(find mrslam_sim)/param/dwa_local_planner_params.yaml" command="load" />
		    <remap from="map" to="map_merging/map"/>
         </node>

	    <node pkg="tf" type="static_transform_publisher" name="world_tf" args="0 0 0 0 0 0 world $(arg robot_name)/$(arg robot_name)/map 100"/>

	    <!--tf_prefix fix for rviz-->
	    <node pkg="tf" type="static_transform_publisher" name="map_to_rviz" args="0 0 0 0 0 0 $(arg robot_name)/$(arg robot_name)/map $(arg robot_name)/map 100"/>

		<node pkg="map_to_pose" type="map_to_pose_node" name="map_to_pose"/>
		<node pkg="map_merging" type="map_merging" name="map_merging" output="screen">
			<param name="~max_comm_distance" value="10.0"/>
			<!--Set to 0, because all required transforms made in map_to_posestamped; need to set it only in real experiments-->
			<param name="init_pose_x" value="0"/>
			<param name="init_pose_y" value="0"/>
			<param name="init_pose_z" value="0"/>
			<param name="~map_topic" value="map_local"/>
		</node>

    </group>

</launch>
